- if signed_in?
  .row
    .col-xs-12
      %p.text-right{style: "padding-top:5px;"}
        = link_to 'Logout', destroy_user_session_path, :method=>'delete'
        %a{href: new_activity_path}
          %span.glyphicon.glyphicon-plus-sign{style: "font-size:1.4em;"}
        %a{href: settings_path}
          %span.glyphicon.glyphicon-cog{style: "font-size:1.4em;"}
  - if @activities.present?
    .row
      %table.table
        - @activities.each do |a|
          %tr{:class => ("active" if a.active?(current_user)), id: a.id}
            %td
              = link_to (a.active?(current_user) ? stop_activity_path(a) : start_activity_path(a)), remote: true, :"data-start-path" => start_activity_path(a), :"data-stop-path" => stop_activity_path(a) do
                %h2
                  #{a.name}
                  %span.pull-right.duration{id: "clock#{a.id}", :"data-total-time" => current_user.daily_activity_duration(a)} #{current_user.daily_activity_duration(a)}
    :javascript
      $(function() {
        return $("a[data-remote]").on("ajax:success", function(e, data, status, xhr) {
          if(!data.stop){
            $(this).parents('tr').
                    siblings().
                    removeClass("active").
                    map(function(){
                      var a = $(this).find('a');
                      a.attr('href', a.data('start-path') + '?duration=' + a.find('span.duration').data('total-time'));
                      window[$(this).find('span.duration').attr('id')].stopClock();
                    });
            window[$(this).find('span.duration').attr('id')].startClock();
          }
          else{
            window[$(this).find('span.duration').attr('id')].stopClock();
          }
          $(this).parents('tr').toggleClass("active");
          $(this).attr('href', data.path + '?duration=' + $(this).find('span.duration').data('total-time'));
        }).on("ajax:error", function(e, data, status, xhr){
          console.log(data);
          return alert("Something went wrong!");
        });
      });

      function Clock(element, active) {
        this.element = element;
        this.minutes = 0;
        this.seconds = 0;
        this.totalTime = 0;
        this.hours = 0;
        this.active = active;
      }

      Clock.prototype = {
        startClock: function() {
          this.active = true;
          this.setTimeFromSeconds(this.totalTime);
          this.element.text(this.formattedTime());
          this.element.data('total-time', this.totalTime);
          this.totalTime++;
          var that = this;
          this.counter = setTimeout(function(){that.startClock()},1000);
        },
        setTimeFromSeconds: function(totalTime){
          this.seconds = totalTime%60
          this.minutes = Math.floor((totalTime/60)%60)
          this.hours = Math.floor(totalTime/3600)
        },
        formattedTime: function(){
          if (this.hours > 0){
            return this.hours + ":" + this.checkDigits(this.minutes) + ":" + this.checkDigits(this.seconds);
          }
          else{
            return this.minutes + ":" + this.checkDigits(this.seconds);
          }
        },
        checkDigits: function(i) {
          if (i<10) {
             i="0" + i;
          }
          return i;
        },
        stopClock: function() {
          this.active = false;
          this.element.text(this.formattedTime());
          clearTimeout(this.counter);
        },
        resetClock: function() {
          this.element.text("0:00");
          this.minutes = 0;
          this.active = false;
          this.hours = 0;
          this.seconds = 0;
          this.totalTime = 0;
          this.counter = null;
        }
      }

      function initClock(element, active) {
        if(typeof element == 'undefined'){
          return false;
        }
        ele = element.attr('id');
        window[ele] = new Clock(element, active);
        window[ele].totalTime = parseInt(element.text(), 10);
        window[ele].setTimeFromSeconds(window[ele].totalTime);
        if(active){
          window[ele].startClock();
        }
        else{
          window[ele].stopClock();
        }
      }
      window.onload = function() {
        $('span.duration').map(function(){
          initClock($(this), $(this).parents('tr').hasClass('active'));
        });
      }

  - else
    .row
      .col-xs-12.text-center
        %h2 You have no activities!
        %a{href: new_activity_path}
          %button.btn.btn-primary.btn-lg.btn-block{:type => "button"} Create one now
- else
  .row
    .col-xs-12.text-center
      %h2 Timeblocks
      %a{href: new_user_session_path}
        %button.btn.btn-primary.btn-lg.btn-block{:type => "button"} Sign In
      %a{href: new_user_registration_path}
        %button.btn.btn-default.btn-lg.btn-block{:type => "button"} Sign Up




